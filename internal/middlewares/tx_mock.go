// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Github/gophkeeper/internal/middlewares/tx.go

// Package middlewares is a generated GoMock package.
package middlewares

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTxSetter is a mock of TxSetter interface.
type MockTxSetter struct {
	ctrl     *gomock.Controller
	recorder *MockTxSetterMockRecorder
}

// MockTxSetterMockRecorder is the mock recorder for MockTxSetter.
type MockTxSetterMockRecorder struct {
	mock *MockTxSetter
}

// NewMockTxSetter creates a new mock instance.
func NewMockTxSetter(ctrl *gomock.Controller) *MockTxSetter {
	mock := &MockTxSetter{ctrl: ctrl}
	mock.recorder = &MockTxSetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTxSetter) EXPECT() *MockTxSetterMockRecorder {
	return m.recorder
}

// Set mocks base method.
func (m *MockTxSetter) Set(ctx context.Context) (context.Context, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", ctx)
	ret0, _ := ret[0].(context.Context)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Set indicates an expected call of Set.
func (mr *MockTxSetterMockRecorder) Set(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockTxSetter)(nil).Set), ctx)
}
