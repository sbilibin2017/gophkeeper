// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Github/gophkeeper/internal/client/auth.go

// Package client is a generated GoMock package.
package client

import (
	reflect "reflect"

	resty "github.com/go-resty/resty/v2"
	gomock "github.com/golang/mock/gomock"
)

// MockTokenGetter is a mock of TokenGetter interface.
type MockTokenGetter struct {
	ctrl     *gomock.Controller
	recorder *MockTokenGetterMockRecorder
}

// MockTokenGetterMockRecorder is the mock recorder for MockTokenGetter.
type MockTokenGetterMockRecorder struct {
	mock *MockTokenGetter
}

// NewMockTokenGetter creates a new mock instance.
func NewMockTokenGetter(ctrl *gomock.Controller) *MockTokenGetter {
	mock := &MockTokenGetter{ctrl: ctrl}
	mock.recorder = &MockTokenGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenGetter) EXPECT() *MockTokenGetterMockRecorder {
	return m.recorder
}

// GetFromResponse mocks base method.
func (m *MockTokenGetter) GetFromResponse(resp *resty.Response) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFromResponse", resp)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFromResponse indicates an expected call of GetFromResponse.
func (mr *MockTokenGetterMockRecorder) GetFromResponse(resp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFromResponse", reflect.TypeOf((*MockTokenGetter)(nil).GetFromResponse), resp)
}
