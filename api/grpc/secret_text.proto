syntax = "proto3";

package gophkeeper;

option go_package = "pkg/grpc";

// Представление текстового секрета
message SecretText {
  string secret_name = 1;
  string content = 2;
  string meta = 3;
  string updated_at = 4;
}

// Запрос списка текстовых секретов (без token)
message SecretTextListRequest {}

// Ответ со списком текстовых секретов
message SecretTextListResponse {
  repeated SecretText items = 1;
}

// Запрос для получения одного текстового секрета по имени (без token)
message SecretTextGetRequest {
  string secret_name = 1;
}

// Ответ для получения одного текстового секрета
message SecretTextGetResponse {
  SecretText secret = 1;
}

// Запрос на сохранение текстового секрета (без token)
message SecretTextSaveRequest {
  SecretText secret = 1;
}

// Ответ на сохранение (пустой)
message SecretTextSaveResponse {}

// gRPC-сервис для работы с текстовыми секретами
service SecretTextService {
  rpc List(SecretTextListRequest) returns (SecretTextListResponse);
  rpc Get(SecretTextGetRequest) returns (SecretTextGetResponse);
  rpc Save(SecretTextSaveRequest) returns (SecretTextSaveResponse);
}
