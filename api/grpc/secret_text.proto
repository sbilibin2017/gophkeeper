syntax = "proto3";

package gophkeeper;

option go_package = "pkg/grpc";

// Запрос на сохранение текстового секрета
message SecretTextSaveRequest {
  string secret_name = 1; // Уникальное имя секрета
  string content = 2;     // Текстовое содержимое секрета
  string meta = 3;        // Дополнительные метаданные (может быть пустым)
}

// Ответ на сохранение (пустой)
message SecretTextSaveResponse {}

// Запрос на получение одного текстового секрета по имени
message SecretTextGetRequest {
  string secret_name = 1;
}

// Ответ на получение одного текстового секрета
message SecretTextGetResponse {
  string secret_name = 1;
  string secret_owner = 2; // Владелец секрета
  string content = 3;
  string meta = 4;
  string updated_at = 5;
}

// Запрос на получение списка текстовых секретов
message SecretTextListRequest {}

// Ответ со списком текстовых секретов
message SecretTextListResponse {
  repeated SecretTextGetResponse items = 1;
}

// gRPC-сервис для работы с текстовыми секретами
service SecretTextService {
  rpc List(SecretTextListRequest) returns (SecretTextListResponse);
  rpc Get(SecretTextGetRequest) returns (SecretTextGetResponse);
  rpc Save(SecretTextSaveRequest) returns (SecretTextSaveResponse);
}
