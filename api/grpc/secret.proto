syntax = "proto3";

package secret;

option go_package = "github.com/sbilibin2017/gophkeeper/pkg/grpc";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

// SecretGetRequest defines the request to fetch a secret by its name and type.
message SecretGetRequest {
  string secret_name = 1;
  string secret_type = 2;  
}

// Secret represents an encrypted secret stored in the database.
message Secret {
  string secret_name = 1;
  string secret_type = 2;
  string secret_owner = 3;
  bytes ciphertext = 4;
  bytes aes_key_enc = 5; 
  google.protobuf.Timestamp created_at = 6;  
  google.protobuf.Timestamp updated_at = 7;
}

// SecretWriteService handles saving encrypted secrets.
service SecretWriteService {
  // Saves an encrypted secret.
  rpc Save(Secret) returns (google.protobuf.Empty);
}

// SecretReadService handles reading encrypted secrets.
service SecretReadService {
  // Retrieves a specific secret by name and type.
  rpc Get(SecretGetRequest) returns (Secret);
  
  // Lists all secrets for the authenticated user.
  rpc List(google.protobuf.Empty) returns (stream Secret);
}
