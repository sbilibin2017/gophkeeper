syntax = "proto3";

package gophkeeper;

option go_package = "pkg/grpc";

// Запрос на сохранение бинарного секрета
message SecretBinarySaveRequest {
  string secret_name = 1; // Уникальное имя секрета
  bytes data = 2;         // Содержимое бинарного секрета
  string meta = 3;        // Дополнительные метаданные (может быть пустым)
}

// Ответ на сохранение (пустой)
message SecretBinarySaveResponse {}

// Запрос для получения одного бинарного секрета по имени
message SecretBinaryGetRequest {
  string secret_name = 1;
}

// Ответ для получения одного бинарного секрета
message SecretBinaryGetResponse {
  string secret_name = 1;
  string secret_owner = 2;  // Владелец секрета
  bytes data = 3;
  string meta = 4;
  string updated_at = 5;
}

// Запрос на получение списка бинарных секретов
message SecretBinaryListRequest {}

// Ответ со списком бинарных секретов
message SecretBinaryListResponse {
  repeated SecretBinaryGetResponse items = 1;
}

// gRPC-сервис для работы с бинарными секретами
service SecretBinaryService {
  rpc List(SecretBinaryListRequest) returns (SecretBinaryListResponse);
  rpc Get(SecretBinaryGetRequest) returns (SecretBinaryGetResponse);
  rpc Save(SecretBinarySaveRequest) returns (SecretBinarySaveResponse);
}
