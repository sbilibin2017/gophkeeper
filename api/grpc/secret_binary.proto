syntax = "proto3";

package gophkeeper;

option go_package = "pkg/grpc";

// Представление бинарного секрета
message SecretBinary {
  string secret_name = 1;
  bytes data = 2;
  string meta = 3;
  string updated_at = 4;
}

// Запрос списка бинарных секретов (без поля token)
message SecretBinaryListRequest {}

// Ответ со списком бинарных секретов
message SecretBinaryListResponse {
  repeated SecretBinary items = 1;
}

// Запрос для получения одного бинарного секрета по имени (без поля token)
message SecretBinaryGetRequest {
  string secret_name = 1;
}

// Ответ для получения одного бинарного секрета
message SecretBinaryGetResponse {
  SecretBinary secret = 1;
}

// Запрос на сохранение бинарного секрета (без поля token)
message SecretBinarySaveRequest {
  SecretBinary secret = 1;
}

// Ответ на сохранение (пустой)
message SecretBinarySaveResponse {}

// gRPC-сервис для работы с бинарными секретами
service SecretBinaryService {
  rpc List(SecretBinaryListRequest) returns (SecretBinaryListResponse);
  rpc Get(SecretBinaryGetRequest) returns (SecretBinaryGetResponse);
  rpc Save(SecretBinarySaveRequest) returns (SecretBinarySaveResponse);
}
