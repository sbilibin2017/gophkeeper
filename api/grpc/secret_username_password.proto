syntax = "proto3";

package gophkeeper;

option go_package = "pkg/grpc";

// Запрос на сохранение секрета с логином и паролем
message SecretUsernamePasswordSaveRequest {
  string secret_name = 1; // Уникальное имя секрета
  string username = 2;    // Логин
  string password = 3;    // Пароль
  string meta = 4;        // Дополнительные метаданные (может быть пустым)
}

// Ответ на сохранение (пустой)
message SecretUsernamePasswordSaveResponse {}

// Запрос на получение одного секрета по имени
message SecretUsernamePasswordGetRequest {
  string secret_name = 1;
}

// Ответ на получение одного секрета
message SecretUsernamePasswordGetResponse {
  string secret_name = 1;
  string secret_owner = 2;  // Владелец секрета
  string username = 3;
  string password = 4;
  string meta = 5;
  string updated_at = 6;
}

// Запрос на получение списка секретов
message SecretUsernamePasswordListRequest {}

// Ответ со списком секретов
message SecretUsernamePasswordListResponse {
  repeated SecretUsernamePasswordGetResponse items = 1;
}

// gRPC-сервис для работы с секретами логина и паролем
service SecretUsernamePasswordService {
  rpc List(SecretUsernamePasswordListRequest) returns (SecretUsernamePasswordListResponse);
  rpc Get(SecretUsernamePasswordGetRequest) returns (SecretUsernamePasswordGetResponse);
  rpc Save(SecretUsernamePasswordSaveRequest) returns (SecretUsernamePasswordSaveResponse);
}
