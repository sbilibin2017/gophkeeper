syntax = "proto3";

package gophkeeper;

option go_package = "pkg/grpc";

// Представление секрета с логином и паролем
message SecretUsernamePassword {
  string secret_name = 1;
  string username = 2;
  string password = 3;
  string meta = 4;
  string updated_at = 5;
}

// Запрос списка секретов с логином и паролем (без token)
message SecretUsernamePasswordListRequest {}

// Ответ со списком секретов с логином и паролем
message SecretUsernamePasswordListResponse {
  repeated SecretUsernamePassword items = 1;
}

// Запрос для получения одного секрета по имени (без token)
message SecretUsernamePasswordGetRequest {
  string secret_name = 1;
}

// Ответ для получения одного секрета
message SecretUsernamePasswordGetResponse {
  SecretUsernamePassword secret = 1;
}

// Запрос на сохранение секрета (без token)
message SecretUsernamePasswordSaveRequest {
  SecretUsernamePassword secret = 1;
}

// Ответ на сохранение (пустой)
message SecretUsernamePasswordSaveResponse {}

// gRPC-сервис для работы с секретами логина и паролем
service SecretUsernamePasswordService {
  rpc List(SecretUsernamePasswordListRequest) returns (SecretUsernamePasswordListResponse);
  rpc Get(SecretUsernamePasswordGetRequest) returns (SecretUsernamePasswordGetResponse);
  rpc Save(SecretUsernamePasswordSaveRequest) returns (SecretUsernamePasswordSaveResponse);
}
