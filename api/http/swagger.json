{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API сервер для управления секретами.",
        "title": "GophKeeper API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/get-device": {
            "get": {
                "description": "Извлекает устройство и возвращает данные устройства",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Получение информации об устройстве",
                "responses": {
                    "200": {
                        "description": "Информация об устройстве",
                        "schema": {
                            "$ref": "#/definitions/handlers.DeviceResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный токен или запрос"
                    },
                    "401": {
                        "description": "Неавторизованный доступ"
                    },
                    "404": {
                        "description": "Устройство не найдено"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            }
        },
        "/get-secret": {
            "get": {
                "description": "Возвращает данные секрета пользователя по имени секрета",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "secrets"
                ],
                "summary": "Получение секрета по имени",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Имя секрета",
                        "name": "secret_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о секрете",
                        "schema": {
                            "$ref": "#/definitions/handlers.SecretResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос или отсутствует имя секрета"
                    },
                    "401": {
                        "description": "Неавторизованный доступ"
                    },
                    "404": {
                        "description": "Секрет не найден"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            }
        },
        "/get-secret-key": {
            "get": {
                "description": "Извлекает секретный ключ по токену из запроса, возвращает данные ключа",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "secret-key"
                ],
                "summary": "Получение информации о секретном ключе",
                "responses": {
                    "200": {
                        "description": "Информация о секретном ключе",
                        "schema": {
                            "$ref": "#/definitions/handlers.SecretKeyResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный токен или запрос"
                    },
                    "401": {
                        "description": "Неавторизованный доступ"
                    },
                    "404": {
                        "description": "Закодированный ключ секрета не найден"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            }
        },
        "/list-secrets": {
            "get": {
                "description": "Возвращает список всех секретов текущего пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "secrets"
                ],
                "summary": "Получение списка всех секретов пользователя",
                "responses": {
                    "200": {
                        "description": "Список секретов пользователя",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.SecretResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный запрос"
                    },
                    "401": {
                        "description": "Неавторизованный доступ"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Проверяет логин и пароль, опционально устройство, генерирует токен и возвращает его в заголовке",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Аутентификация пользователя",
                "parameters": [
                    {
                        "description": "Запрос на аутентификацию пользователя",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная аутентификация, токен в заголовке"
                    },
                    "400": {
                        "description": "Неверный запрос или устройство не найдено"
                    },
                    "401": {
                        "description": "Неверный логин или пароль"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Создает новый аккаунт пользователя, генерирует пару ключей RSA и возвращает приватный ключ и ID устройства",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация нового пользователя",
                "parameters": [
                    {
                        "description": "Запрос на регистрацию пользователя",
                        "name": "registerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная регистрация",
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос"
                    },
                    "409": {
                        "description": "Пользователь с таким именем уже существует"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            }
        },
        "/save-secret": {
            "post": {
                "description": "Сохраняет новый секрет пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "secrets"
                ],
                "summary": "Сохранение нового секрета",
                "parameters": [
                    {
                        "description": "Данные секрета для сохранения",
                        "name": "secret",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SecretRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Секрет успешно сохранен"
                    },
                    "400": {
                        "description": "Неверный запрос"
                    },
                    "401": {
                        "description": "Неавторизованный доступ"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            }
        },
        "/save-secret-key": {
            "post": {
                "description": "Сохраняет новый секретный ключ пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "secret-key"
                ],
                "summary": "Сохранение нового секретного ключа",
                "parameters": [
                    {
                        "description": "Данные секретного ключа для сохранения",
                        "name": "secretKey",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SecretKeyResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Секретный ключ успешно сохранен"
                    },
                    "400": {
                        "description": "Неверный токен или запрос"
                    },
                    "401": {
                        "description": "Неавторизованный доступ"
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера"
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.DeviceResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Дата создания устройства\nexample: 2025-08-17T12:34:56Z\ndefault: 2025-08-17T12:34:56Z",
                    "type": "string"
                },
                "device_id": {
                    "description": "Уникальный идентификатор устройства\nexample: \"f47ac10b-58cc-4372-a567-0e02b2c3d479\"\ndefault: \"f47ac10b-58cc-4372-a567-0e02b2c3d479\"",
                    "type": "string"
                },
                "public_key": {
                    "description": "Публичный ключ устройства\nexample: |\n  -----BEGIN PUBLIC KEY-----\n  MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu7pM4h2...\n  -----END PUBLIC KEY-----\ndefault: |\n  -----BEGIN PUBLIC KEY-----\n  MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu7pM4h2...\n  -----END PUBLIC KEY-----",
                    "type": "string"
                },
                "updated_at": {
                    "description": "Дата последнего обновления данных устройства\nexample: 2025-08-17T12:45:00Z\ndefault: 2025-08-17T12:45:00Z",
                    "type": "string"
                },
                "user_id": {
                    "description": "Идентификатор пользователя-владельца устройства\nexample: \"c56a4180-65aa-42ec-a945-5fd21dec0538\"\ndefault: \"c56a4180-65aa-42ec-a945-5fd21dec0538\"",
                    "type": "string"
                }
            }
        },
        "handlers.LoginRequest": {
            "type": "object",
            "properties": {
                "device_id": {
                    "description": "Уникальный идентификатор устройства\nrequired: true\nexample: \"f47ac10b-58cc-4372-a567-0e02b2c3d479\"",
                    "type": "string"
                },
                "password": {
                    "description": "Пароль пользователя\nrequired: true\nexample: Secret123!",
                    "type": "string"
                },
                "username": {
                    "description": "Имя пользователя\nrequired: true\nexample: johndoe",
                    "type": "string"
                }
            }
        },
        "handlers.RegisterRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "description": "Пароль пользователя\nrequired: true\nexample: Secret123!\ndefault: Secret123!",
                    "type": "string"
                },
                "username": {
                    "description": "Имя пользователя\nrequired: true\nexample: johndoe\ndefault: johndoe",
                    "type": "string"
                }
            }
        },
        "handlers.RegisterResponse": {
            "type": "object",
            "properties": {
                "device_id": {
                    "description": "Уникальный идентификатор устройства\nrequired: true\nexample: \"f47ac10b-58cc-4372-a567-0e02b2c3d479\"\ndefault: \"f47ac10b-58cc-4372-a567-0e02b2c3d479\"",
                    "type": "string"
                },
                "private_key": {
                    "description": "Приватный ключ RSA (PEM кодирование)\nrequired: true\nexample: |\n  -----BEGIN RSA PRIVATE KEY-----\n  MIIEpAIBAAKCAQEAu7pM4h2...\n  -----END RSA PRIVATE KEY-----\ndefault: |\n  -----BEGIN RSA PRIVATE KEY-----\n  MIIEpAIBAAKCAQEAu7pM4h2...\n  -----END RSA PRIVATE KEY-----",
                    "type": "string"
                },
                "user_id": {
                    "description": "Уникальный идентификатор пользователя\nrequired: true\nexample: \"c56a4180-65aa-42ec-a945-5fd21dec0538\"\ndefault: \"c56a4180-65aa-42ec-a945-5fd21dec0538\"",
                    "type": "string"
                }
            }
        },
        "handlers.SecretKeyResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Дата создания записи\nexample: 2025-08-17T12:34:56Z\ndefault: 2025-08-17T12:34:56Z",
                    "type": "string"
                },
                "device_id": {
                    "description": "Идентификатор устройства\nexample: \"device-67890\"\ndefault: \"device-67890\"",
                    "type": "string"
                },
                "encrypted_aes_key": {
                    "description": "AES ключ, зашифрованный публичным ключом устройства\nexample: \"U2FsdGVkX1+abcd1234efgh5678ijkl90==\"\ndefault: \"U2FsdGVkX1+abcd1234efgh5678ijkl90==\"",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "secret_id": {
                    "description": "Идентификатор секрета\nexample: \"secret-12345\"\ndefault: \"secret-12345\"",
                    "type": "string"
                },
                "secret_key_id": {
                    "description": "Уникальный идентификатор записи секретного ключа\nexample: \"a1b2c3d4-e5f6-7890-abcd-1234567890ef\"\ndefault: \"a1b2c3d4-e5f6-7890-abcd-1234567890ef\"",
                    "type": "string"
                },
                "updated_at": {
                    "description": "Дата последнего обновления записи\nexample: 2025-08-17T12:45:00Z\ndefault: 2025-08-17T12:45:00Z",
                    "type": "string"
                }
            }
        },
        "handlers.SecretRequest": {
            "type": "object",
            "properties": {
                "encrypted_payload": {
                    "description": "Зашифрованное содержимое секрета\nexample: \"SGVsbG8gV29ybGQh\"\ndefault: \"SGVsbG8gV29ybGQh\"",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "meta": {
                    "description": "Метаданные секрета в формате JSON\nexample: {\"url\":\"https://example.com\"}\ndefault: \"{\\\"url\\\":\\\"https://example.com\\\"}\"",
                    "type": "string"
                },
                "nonce": {
                    "description": "Nonce для шифрования\nexample: \"MTIzNDU2Nzg5MA==\"\ndefault: \"MTIzNDU2Nzg5MA==\"",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "secret_name": {
                    "description": "Название секрета\nexample: \"my-password\"\ndefault: \"my-password\"",
                    "type": "string"
                },
                "secret_type": {
                    "description": "Тип секрета\nexample: \"password\"\ndefault: \"password\"",
                    "type": "string"
                },
                "user_id": {
                    "description": "Идентификатор пользователя\nexample: \"user789\"\ndefault: \"user789\"",
                    "type": "string"
                }
            }
        },
        "handlers.SecretResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Дата создания секрета\nexample: \"2025-08-17T12:00:00Z\"\ndefault: \"2025-08-17T12:00:00Z\"",
                    "type": "string"
                },
                "encrypted_payload": {
                    "description": "Зашифрованное содержимое секрета\nexample: \"U2FsdGVkX1+abc123xyz==\"\ndefault: \"U2FsdGVkX1+abc123xyz==\"",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "meta": {
                    "description": "Метаданные секрета в формате JSON\nexample: \"{\\\"url\\\":\\\"https://example.com\\\",\\\"note\\\":\\\"для личного пользования\\\"}\"\ndefault: \"{\\\"url\\\":\\\"https://example.com\\\",\\\"note\\\":\\\"для личного пользования\\\"}\"",
                    "type": "string"
                },
                "nonce": {
                    "description": "Nonce для шифрования\nexample: \"bXlOb25jZQ==\"\ndefault: \"bXlOb25jZQ==\"",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "secret_id": {
                    "description": "Уникальный идентификатор секрета\nexample: \"abc123\"\ndefault: \"abc123\"",
                    "type": "string"
                },
                "secret_name": {
                    "description": "Название секрета\nexample: \"MyBankPassword\"\ndefault: \"MyBankPassword\"",
                    "type": "string"
                },
                "secret_type": {
                    "description": "Тип секрета\nexample: \"password\"\ndefault: \"password\"",
                    "type": "string"
                },
                "updated_at": {
                    "description": "Дата последнего обновления секрета\nexample: \"2025-08-17T12:30:00Z\"\ndefault: \"2025-08-17T12:30:00Z\"",
                    "type": "string"
                },
                "user_id": {
                    "description": "Идентификатор пользователя\nexample: \"user789\"\ndefault: \"user789\"",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Bearer токен для авторизации в формате: \"Bearer {token}\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}